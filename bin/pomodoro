#!/usr/bin/env node

var 
pomo = require('../src/index'),

chalk = require('chalk'),
moment = require('moment'),

program = require('commander'),
argv = require('minimist')(process.argv.slice(2)),

table = require('text-table'),

path = require('path')


// 
// var app = new pomo.App({task:0.2, shortBreak:.1, notification:0.1}), //dev mode

function bindEvents(app){

  function now(){
    return moment(new Date()).format("HH:mm:ss")
  }

  app.on('task.start', function(time, task){
    console.log(
      chalk.cyan('===========================================================') + "\n"
      + '# Stating task ' + chalk.cyan(task) + ' at ' + chalk.cyan(now()) + "\n" +
      chalk.cyan('===========================================================') + "\n"
    )
  })


  app.on('task.timeover', function(){
    console.log(
      "\n\n" + chalk.gray('-------------------------- BREAK --------------------------') + "\n"
    )
  })


  app.on('shortBreak.timeover', function(){
    console.log(
      chalk.gray("\n\n................ END OF TASK @ " + now() + " ...................\n")
    )
  })


  new pomo.OSNotifier().connect(app)
  new pomo.Timer().connect(app)
  new pomo.Logger().connect(app)
}


function runTask(number){
    // Then start app with the app
    var app = new pomo.App()

    bindEvents(app)

    app.startTask(number)
}

//@TEST and move to its own file
function getOpts(config, argv){

  // Findds a value from the given options
  // @TODO add coercion
  function getVal(key, c){
    if(argv[key]){
      return argv[key];
    }


    if(argv[c.alias]){
      return argv[c.alias]
    }
  }

  return Object.keys(config).reduce(function(opts, k){
    opts[k] = getVal(k, config[k])

    return opts
  }, {})

}


function report(start, options){

  var opts = getOpts({
    from: {alias:'f'},
    to: {alias:'t'}
  }, argv)

  var 
  app = new pomo.App(),
  file = path.join(app.config.path, 'pomo.txt')

  new pomo.Reporter(file)
    .report(opts.from, opts.to)
    .then(function(report){

      // Draw header
      console.log(chalk.gray('\nReport by Project\n'))

      // Draw Data
      console.log(table(report.toTable()))

      // Draw Summary
      console.log(chalk.green('\nTotal: ' + report.total + '\n'))
    })
}

// @TODO Replace commander
program.version(pomo.App.version)

/**
 * By default it starts 
 */
program.command('*')
  .description('Start a new timer for a given task')
  .action(function(task, options){
    runTask(task)
  })



program
  .command('report [query]')
  .description('Display a report by command')
  .option('-f', '--from <date>')
  .option('-t', '--to <date>')
  .action(report)


/**
 * Bootstrap command
 */
program.parse(process.argv)

/**
 * Dedault command will prompt the task
 */
if(!argv._.length){
  runTask()
}