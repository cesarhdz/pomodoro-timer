#!/usr/bin/env node

//     pomodoro-timer
//     Copyright (c) 2013 Nick Baugh <niftylettuce@gmail.com>
//     MIT Licensed

//
// Free Pomodoro® Technique CLI timer built with Node.
//
// The Pomodoro Technique® and Pomodoro™ are
//  registered trademarks of Francesco Cirillo.
//

// * Author: [@niftylettuce](https://twitter.com/#!/niftylettuce)
// * Source: <https://github.com/niftylettuce/pomodoro-timer>

// # pomodoro-timer

//@TODO use node-time http://stackoverflow.com/a/10825813/915034
// https://github.com/TooTallNate/node-time
// Moment.js is another options
// 
// process.env.TZ = 'America/Mexico_City'

var growl    = require('growl')
  , path     = require('path')
  , version  = require('../package').version
  , pomodoro = path.join(__dirname, '..', 'assets', 'pomodoro-timer.png')

  , App = require('../src/pomodoro')

  , chalk = require('chalk')

  , dateFormat = require('dateformat')


function toMinutes(time){

  var 
  sec = time / 1000 % 60,
  min = parseInt(time / 1000 / 60)

  function pad(str){
    var 
    format = '00',
    str = str + ''

    return format.substring(0, format.length - str.length) + str
  }

  return  pad(min) + ":" + pad(sec)
}

var app = new App()
app.run()

var
now = function(){
  return dateFormat(new Date(), "h:MM:ss")
},

timer = function(label, color){ return function(time){

  var
  times = 0, 
  interval = 1 * 1000, // Update every minute
  total =  toMinutes(time),
  cb = setInterval(function(){
    times++
    
    process.stdout.clearLine()
    process.stdout.cursorTo(0)
    process.stdout.write(
      "| [" + label + '] => ' + chalk[color](' ' + toMinutes(times * interval)  + ' ')
    )

  }, interval)

  setTimeout(function(){
    clearInterval(cb)
  }, time)

}}


app.on('task.start', function(time, task){
  console.log(
              chalk.cyan('===========================================================') + "\n"
              + '# Stating task ' + chalk.cyan(task) + ' at ' + chalk.cyan(now()) + "\n" +
              chalk.cyan('===========================================================') + "\n"
              )
})


app.on('task.start', timer('Task', 'bgGreen') )

app.on('task.timeover', function(){
  console.log(
    "\n\n" + chalk.gray('-------------------------- BREAK --------------------------') + "\n"
  )
})

app.on('task.timeover.notification', function(timeLeft, task){
  // Growl notification
  growl('Tic tac!', { 
    title: 'You have ' +  toMinutes(timeLeft) + ' minutes to complete your task!', 
    image: pomodoro 
  })
})


app.on('shortBreak.start', function(time){
  // Growl notification
  growl('Break time', { 
    title: 'It\'s time to have a Break!', 
    image: pomodoro 
  })
})

app.on('shortBreak.start', timer('Break', 'bgYellow'))



app.on('shortBreak.timeover', function(){
  console.log(
    chalk.gray("\n\n................ END OF TASK @ " + now() + " ...................\n")
  )

  // Growl notification
  growl('Break Time is over', { 
    title: 'You have to get back to work!', 
    image: pomodoro 
  })
})
