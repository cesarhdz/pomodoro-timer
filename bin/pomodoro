#!/usr/bin/env node

var 
path     = require('path'),
version  = require('../package').version,

App = require('../src/pomodoro'),
OSNotifier = require('../src/OSNotifier'),

chalk = require('chalk'),

dateFormat = require('dateformat')


function toMinutes(time){

  var 
  sec = time / 1000 % 60,
  min = parseInt(time / 1000 / 60)

  function pad(str){
    var 
    format = '00',
    str = str + ''

    return format.substring(0, format.length - str.length) + str
  }

  return  pad(min) + ":" + pad(sec)
}

var 
app = new App(),
// app = new App({task:0.5, shortBreak:.5}), //dev mode

now = function(){
  return dateFormat(new Date(), "h:MM:ss")
},

timer = function(label, color){ return function(time){

  var
  times = 0, 
  interval = 1 * 1000, // Update every minute
  total =  toMinutes(time),
  cb = setInterval(function(){
    times++
    
    process.stdout.clearLine()
    process.stdout.cursorTo(0)
    process.stdout.write(
      "| [" + label + '] => ' + chalk[color](' ' + toMinutes(times * interval)  + ' ')
    )

  }, interval)

  setTimeout(function(){
    clearInterval(cb)
  }, time)

}}

app.on('app.start', function(){
  console.log("\n")
  console.log(chalk.yellow('                      o       o '))
  console.log(chalk.yellow('                      |       | '))
  console.log(chalk.yellow('o-o  o-o o-O-o o-o   -o- \\ / -o-'))
  console.log(chalk.yellow('|  | | | | | | | |    |   o   | '))
  console.log(chalk.yellow('O-o  o-o o o o o-o O  o  / \\  o '))
  console.log(chalk.yellow('|                               '))
  console.log(chalk.yellow('o                               '))
  console.log("\n")
  console.log(chalk.green('* Starting a new Journey at ' + now() ))
})


app.on('task.start', function(time, task){
  console.log(
              chalk.cyan('===========================================================') + "\n"
              + '# Stating task ' + chalk.cyan(task) + ' at ' + chalk.cyan(now()) + "\n" +
              chalk.cyan('===========================================================') + "\n"
              )
})


app.on('task.start', timer('Task', 'bgGreen') )

app.on('task.timeover', function(){
  console.log(
    "\n\n" + chalk.gray('-------------------------- BREAK --------------------------') + "\n"
  )
})


app.on('shortBreak.start', timer('Break', 'bgYellow'))



app.on('shortBreak.timeover', function(){
  console.log(
    chalk.gray("\n\n................ END OF TASK @ " + now() + " ...................\n")
  )
})


var osNotifier = new OSNotifier()


osNotifier.connect(app)


app.run()