#!/usr/bin/env node

//     pomodoro-timer
//     Copyright (c) 2013 Nick Baugh <niftylettuce@gmail.com>
//     MIT Licensed

//
// Free Pomodoro® Technique CLI timer built with Node.
//
// The Pomodoro Technique® and Pomodoro™ are
//  registered trademarks of Francesco Cirillo.
//

// * Author: [@niftylettuce](https://twitter.com/#!/niftylettuce)
// * Source: <https://github.com/niftylettuce/pomodoro-timer>

// # pomodoro-timer

var growl    = require('growl')
  , program  = require('commander')
  , path     = require('path')
  , fs       = require('fs')
  , version  = require('../package').version
  // , play     = require('play').Play()
  , pomodoro = path.join(__dirname, '..', 'assets', 'pomodoro-timer.png')
  , start    = path.join(__dirname, '..', 'assets', 'start.wav')
  , done     = path.join(__dirname, '..', 'assets', 'done.wav')


  , ProgressBar = require('progress')

  , App = require('../src/pomodoro')




// var app = new App({task:.25, notification: .15, shortBreak: .1})
var app = new App()
app.run()

var progressBar = function(label){
  return function(time){
      var
      step = 10000, //ms
      timeBar = new ProgressBar(label + ' [:bar] :percent ', { 
        total: (time - step)/ step,
        width: 50,
        incomplete: ' ',
        clear: true
      });

      timeBar.tick(0);

      setInterval(function(){
        timeBar.tick()
      }, step);
  }
}


app.on('task.start', function(time, task){
  console.log('| Stating task at ' + new Date().toISOString().replace(/T/, ' ').replace(/\..+/, ''));
  console.log(time + ':00, tic tac');
})


app.on('task.start', progressBar('Task'))


app.on('task.timeover.notification', function(timeLeft, task){
  console.log('| Hurry up!')
  console.log('| You have ' + timeLeft + 'left')
})


app.on('task.timeover', function(task){
  console.log('| Hope you have finished')
  console.log('| Now you deserve a break')
})


app.on('shortBreak.start', function(time){
  console.log('You deserve a break')
  console.log('Have about going to take fresh air')
})

app.on('shortBreak.start', progressBar('Break'))

app.on('shortBreak.timeover', function(){
  console.log("\n\n-------------------------")
  console.log("You have to get back to work!")
})

return 
